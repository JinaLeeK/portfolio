-- phpMyAdmin SQL Dump
-- version 4.5.1
-- http://www.phpmyadmin.net
--
-- Host: 127.0.0.1:3307
-- Generation Time: Jan 17, 2019 at 06:05 AM
-- Server version: 10.1.16-MariaDB
-- PHP Version: 5.6.24

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- Database: `portfolio_db`
--

-- --------------------------------------------------------

--
-- Table structure for table `comments`
--

CREATE TABLE `comments` (
  `cid` int(11) NOT NULL,
  `nickname` varchar(255) NOT NULL,
  `comment` text NOT NULL,
  `pid` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- --------------------------------------------------------

--
-- Table structure for table `posts`
--

CREATE TABLE `posts` (
  `pid` int(11) NOT NULL,
  `title` text NOT NULL,
  `tag_id` int(11) NOT NULL DEFAULT '1',
  `content` text NOT NULL,
  `createdon` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `viewed` int(11) NOT NULL DEFAULT '0'
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `posts`
--

INSERT INTO `posts` (`pid`, `title`, `tag_id`, `content`, `createdon`, `viewed`) VALUES
(1, 'How to make your company website based on bootstrap framework on localhost?', 1, 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin at quam at orci commodo hendrerit vitae nec eros. Vestibulum neque est, imperdiet nec tortor nec, tempor semper metus. Cras vel tempus velit, et accumsan nisi. Duis laoreet pretium ultricies. Curabitur rhoncus auctor nunc congue sodales. Sed posuere nisi ipsum, eget dignissim nunc dapibus eget. Aenean elementum Click me sollicitudin sapien ut sapien fermentum aliquet mollis. Curabitur ac quam orci sodales quam ut tempor. Hover me suspendisse, gravida in augue in, interdum bibendum dui. Suspendisse sit amet justo sit amet diam fringilla commodo. Praesent ac magna at metus malesuada tincidunt non ac arcu. Nunc gravida eu felis vel elementum. Vestibulum sodales quam ut tempor tempor. Donec sollicitudin sapien ut sapien fermentum, non ultricies nulla gravida.\r\n\r\n\r\nImage source from Link\r\n\r\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Proin at quam at orci commodo hendrerit vitae nec eros. Vestibulum neque est, imperdiet nec tortor nec, tempor semper metus. Cras vel tempus velit, et accumsan nisi. Duis laoreet pretium ultricies. Curabitur rhoncus auctor nunc congue sodale Sed posuere nisi ipsum.\r\n\r\nIntegrate video on magnific popup for fast page load.\r\n\r\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Proin at quam at orci commodo hendrerit vitae nec eros. Vestibulum neque est, imperdiet nec tortor nec, tempor semper metus. Cras vel tempus velit, et accumsan nisi. Duis laoreet pretium ultricies. Curabitur rhoncus auctor nunc congue sodale Sed posuere nisi ipsum.', '2018-07-13 06:34:30', 0),
(2, 'How to design elegant e-mail newsletter in html for wish christmas to your subscribers?', 1, 'Lorem ipsum dolor sit amet, consectetur adipisicing elit. Molestiae ut ratione similique temporibus tempora dicta soluta? Qui hic, voluptatem nemo quo corporis dignissimos voluptatum debitis cumque fugiat mollitia quasi quod. Lorem ipsum dolor sit amet, consectetur adipisicing elit. Molestiae ut ratione similique.', '2018-07-13 06:36:17', 0),
(9, 'null v.s. undefined in JavaScript', 2, '                                                                                    <p>They''re both values usually used to indicate the absence of something. <b>Undefined </b>is the more generic one while <b>null </b>is slightly more specific than undefined.</p><p>In JavaScript, undefined means a variable has been declared but has not yet been assigned a value, such as:</p><p><code><br></code></p><p><code>var TestVar;</code></p><p><code>alert(TestVar);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// shows undefined</code></p><p><code>alert(typeof TestVar);&nbsp; &nbsp; &nbsp;&nbsp;&nbsp;&nbsp;// shows undefined</code></p><p></p><p><br></p><p><b><span style="font-family: Poppins;">null </span></b><span style="font-family: Poppins;">is an assignment value. It can be assigned to a&nbsp;</span>valiable as a representation of no value:</p><p><code><br></code></p><p><code>var TestVar = null;</code></p><p><code>alert(TestVar);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // shows null</code></p><p><code>alert(typeof TestVar);&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</code></p><p></p><p><br></p><p>undefined and <b>null</b> are two distinct types: <b>undefined</b> is a type itself (undefined) while <b>null</b> is an object.<br></p><p><code></code></p><p><code>null === undefined&nbsp; &nbsp; &nbsp; &nbsp;//false<br style="">null == undefined&nbsp; &nbsp; &nbsp; &nbsp; //true&nbsp;<br style="">null === null&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //true<br></code></p><p></p><p>and</p><p><code></code></p><p><code>null = ''value''&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;//ReferenceError<br style="">undefined = ''value'' &nbsp;&nbsp;&nbsp;&nbsp;// ''value''<br></code></p><div></div><p><br></p><p>You can check if the variable has a&nbsp;<b>truthy&nbsp;</b>value or not. That means</p><p><code></code></p><p><code>if(value) {&nbsp; &nbsp; }</code></p><p></p><p>will evaluate to <b>true </b>if value is not:</p><ul><li>null</li><li>undefined</li><li>NaN</li><li>empty string("")</li><li>0</li><li>false</li></ul>                  ', '2019-01-09 16:33:18', 0),
(10, 'Setup Vagrant  with Laravel Homestead', 4, '                                                <p>Laravel Homestead is an official, pre-packaged Vagrant box that provides you a wonderful development environment without requiring you to install PHP, a web server, and any other server software on your local machine.</p><p><br></p><p>Included&nbsp;</p><ul style="font-size: 13px; color: rgb(82, 82, 82); font-family: " whitney="" ssm="" a",="" "whitney="" b",="" sans-serif;"=""><li style="margin: 8px; line-height: 1.65;"><span style="font-family: Poppins;">Ubuntu 18.04</span></li><li style="margin: 8px; line-height: 1.65;"><span style="font-family: Poppins;">Git</span></li><li style="margin: 8px; line-height: 1.65;"><span style="font-family: Poppins;">PHP 7.3</span></li><li style="margin: 8px; line-height: 1.65;"><span style="font-family: Poppins;">PHP 7.2</span></li><li style="margin: 8px; line-height: 1.65;"><span style="font-family: Poppins;">PHP 7.1</span></li><li style="margin: 8px; line-height: 1.65;"><span style="font-family: Poppins;">PHP/ 7.0</span></li><li style="margin: 8px; line-height: 1.65;"><span style="font-family: Poppins;">PHP 5.6</span></li><li style="margin: 8px; line-height: 1.65;"><span style="font-family: Poppins;">Nginx</span></li><li style="margin: 8px; line-height: 1.65;"><span style="font-family: Poppins;">Apache (Optional)</span></li><li style="margin: 8px; line-height: 1.65;"><span style="font-family: Poppins;">MySQL</span></li><li style="margin: 8px; line-height: 1.65;"><span style="font-family: Poppins;">MariaDB (Optional)</span></li><li style="margin: 8px; line-height: 1.65;"><span style="font-family: Poppins;">Sqlite3</span></li><li style="margin: 8px; line-height: 1.65;"><span style="font-family: Poppins;">PostgreSQL</span></li><li style="margin: 8px; line-height: 1.65;"><span style="font-family: Poppins;">Composer</span></li><li style="margin: 8px; line-height: 1.65;"><span style="font-family: Poppins;">Node (With Yarn, Bower, Grunt, and Gulp)</span></li><li style="margin: 8px; line-height: 1.65;"><span style="font-family: Poppins;">Redis</span></li><li style="margin: 8px; line-height: 1.65;"><span style="font-family: Poppins;">Memcached</span></li><li style="margin: 8px; line-height: 1.65;"><span style="font-family: Poppins;">Beanstalkd</span></li><li style="margin: 8px; line-height: 1.65;"><span style="font-family: Poppins;">Mailhog</span></li><li style="margin: 8px; line-height: 1.65;"><span style="font-family: Poppins;">Neo4j (Optional)</span></li><li style="margin: 8px; line-height: 1.65;"><span style="font-family: Poppins;">MongoDB (Optional)</span></li><li style="margin: 8px; line-height: 1.65;"><span style="font-family: Poppins;">Elasticsearch (Optional)</span></li><li style="margin: 8px; line-height: 1.65;"><span style="font-family: Poppins;" class="">ngrok</span></li><li style="margin: 8px; line-height: 1.65;"><span style="font-family: Poppins;">wp-</span><span style="font-family: Poppins;">cli</span></li><li style="margin: 8px; line-height: 1.65;"><span style="font-family: Poppins;">Zend Z-Ray</span></li><li style="margin: 8px; line-height: 1.65;"><span style="font-family: Poppins;">Go</span></li><li style="margin: 8px; line-height: 1.65;"><span style="font-family: Poppins;">Minio</span></li></ul><p><br></p><p><b>Step 1. Before Installing</b></p><p>Before launching your Homestead environment, you must install&nbsp;<a href="https://www.virtualbox.org/wiki/Downloads" style="background-color: rgb(255, 255, 255);">VirtualBox 5.2</a>,&nbsp;<a href="https://www.vmware.com/" style="background-color: rgb(255, 255, 255);">VMWare</a>,&nbsp;<a href="https://www.parallels.com/products/desktop/" style="background-color: rgb(255, 255, 255);">Parallels</a>&nbsp;or&nbsp;<a href="https://docs.microsoft.com/en-us/virtualization/hyper-v-on-windows/quick-start/enable-hyper-v" style="background-color: rgb(255, 255, 255);">Hyper-V</a>&nbsp;as well as&nbsp;<a href="https://www.vagrantup.com/downloads.html" style="background-color: rgb(255, 255, 255);">Vagrant</a>.&nbsp;<br></p><p><br></p><p><b>Step 2. Installing The Homestead Vagrant Box</b></p><p>Once VirtualBox / VMware and Vagrant have been installed, you should add the&nbsp;<span style="color: rgb(255, 0, 0);"><span style="background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; padding: 1px 5px; border-radius: 3px; text-shadow: white 0px 1px; line-height: 2; tab-size: 4; hyphens: none; box-shadow: rgba(0, 0, 0, 0.125) 0px 1px 1px; vertical-align: middle;">laravel</span><span class="token operator" style="">/</span>homesteadbox</span> to your Vagrant installation using the following command in your terminal. It will take a few minutes to download the box, depending on your Internet connection speed:</p><pre class=" language-php" style="font-family: " operator="" mono",="" "fira="" code",="" consolas,="" monaco,="" "andale="" monospace;="" font-size:="" 12px;="" color:="" black;="" text-shadow:="" white="" 0px="" 1px;="" direction:="" ltr;="" word-break:="" normal;="" line-height:="" 2;="" tab-size:="" 4;="" hyphens:="" none;="" padding:="" 10px;="" margin-top:="" margin-bottom:="" 20px;="" background:="" rgba(238,="" 238,="" 0.35);="" border-radius:="" 3px;="" box-shadow:="" rgba(0,="" 0,="" 0.125)="" 1px="" vertical-align:="" middle;"=""><code class=" language-php" style="font-family: " operator="" mono",="" "fira="" code",="" consolas,="" monaco,="" "andale="" monospace;="" font-size:="" 12px;="" color:="" black;="" text-shadow:="" white="" 0px="" 1px;="" direction:="" ltr;="" white-space:="" pre;="" word-spacing:="" normal;="" word-break:="" line-height:="" 2;="" tab-size:="" 4;="" hyphens:="" none;="" vertical-align:="" middle;"="">vagrant box add laravel<span class="token operator" style="color: rgb(85, 85, 85);">/</span>homestead</code></pre><p><span style="color: rgb(51, 51, 51);"></span></p><p><span style="color: rgb(51, 51, 51); font-weight: bold;"><br></span></p><p><span style="color: rgb(51, 51, 51); font-weight: bold;">Step 3. Installing Homestead</span></p><p>You may install Homestead by cloning the repository. Consider cloning the repository into a&nbsp;<span style="font-family: " operator="" mono",="" "fira="" code",="" consolas,="" monaco,="" "andale="" monospace;="" font-size:="" 12px;="" background:="" rgb(240,="" 242,="" 241);="" color:="" rgb(244,="" 100,="" 95);="" padding:="" 1px="" 5px;="" border-radius:="" 3px;="" text-shadow:="" white="" 0px="" 1px;="" white-space:="" pre;="" line-height:="" 2;="" tab-size:="" 4;="" hyphens:="" none;="" box-shadow:="" rgba(0,="" 0,="" 0.125)="" vertical-align:="" middle;"="">Homestead</span>&nbsp;folder within your "home" directory, as the Homestead box will serve as the host to all of your Laravel projects:</p><pre class=" language-php" style="font-family: " operator="" mono",="" "fira="" code",="" consolas,="" monaco,="" "andale="" monospace;="" font-size:="" 12px;="" color:="" black;="" text-shadow:="" white="" 0px="" 1px;="" direction:="" ltr;="" word-break:="" normal;="" line-height:="" 2;="" tab-size:="" 4;="" hyphens:="" none;="" padding:="" 10px;="" margin-top:="" margin-bottom:="" 20px;="" background:="" rgba(238,="" 238,="" 0.35);="" border-radius:="" 3px;="" box-shadow:="" rgba(0,="" 0,="" 0.125)="" 1px="" vertical-align:="" middle;"=""><code class=" language-php" style="font-family: " operator="" mono",="" "fira="" code",="" consolas,="" monaco,="" "andale="" monospace;="" font-size:="" 12px;="" color:="" black;="" text-shadow:="" white="" 0px="" 1px;="" direction:="" ltr;="" white-space:="" pre;="" word-spacing:="" normal;="" word-break:="" line-height:="" 2;="" tab-size:="" 4;="" hyphens:="" none;="" vertical-align:="" middle;"="">git clone https<span class="token punctuation" style="color: rgb(153, 153, 153);">:</span><span class="token operator" style="color: rgb(85, 85, 85);">/</span><span class="token operator" style="color: rgb(85, 85, 85);">/</span>github<span class="token punctuation" style="color: rgb(153, 153, 153);">.</span>com<span class="token operator" style="color: rgb(85, 85, 85);">/</span>laravel<span class="token operator" style="color: rgb(85, 85, 85);">/</span>homestead<span class="token punctuation" style="color: rgb(153, 153, 153);">.</span>git <span class="token operator" style="color: rgb(85, 85, 85);">~</span><span class="token operator" style="color: rgb(85, 85, 85);">/</span>Homestead</code></pre><p style="line-height: 1.9; margin-top: 10px; margin-bottom: 20px;">You should check out a tagged version of Homestead since the&nbsp;<font color="#f4645f" face="Operator Mono, Fira Code, Consolas, Monaco, Andale Mono, monospace"><span style="font-size: 12px; background: rgb(240, 242, 241); padding: 1px 5px; border-radius: 3px; text-shadow: white 0px 1px; white-space: pre; word-spacing: normal; line-height: 2; tab-size: 4; hyphens: none; box-shadow: rgba(0, 0, 0, 0.125) 0px 1px 1px; vertical-align: middle;">master</span></font>&nbsp;branch may not always be stable. You can find the latest stable version on the&nbsp;<a href="https://github.com/laravel/homestead/releases" style="">GitHub Release Page</a>:</p><pre class=" language-php" style="font-family: " operator="" mono",="" "fira="" code",="" consolas,="" monaco,="" "andale="" monospace;="" font-size:="" 12px;="" color:="" black;="" text-shadow:="" white="" 0px="" 1px;="" direction:="" ltr;="" word-break:="" normal;="" line-height:="" 2;="" tab-size:="" 4;="" hyphens:="" none;="" padding:="" 10px;="" margin-top:="" margin-bottom:="" 20px;="" background:="" rgba(238,="" 238,="" 0.35);="" border-radius:="" 3px;="" box-shadow:="" rgba(0,="" 0,="" 0.125)="" 1px="" vertical-align:="" middle;"=""><code class=" language-php" style="font-family: " operator="" mono",="" "fira="" code",="" consolas,="" monaco,="" "andale="" monospace;="" font-size:="" 12px;="" color:="" black;="" text-shadow:="" white="" 0px="" 1px;="" direction:="" ltr;="" white-space:="" pre;="" word-spacing:="" normal;="" word-break:="" line-height:="" 2;="" tab-size:="" 4;="" hyphens:="" none;="" vertical-align:="" middle;"="">cd <span class="token operator" style="color: rgb(85, 85, 85);">~</span><span class="token operator" style="color: rgb(85, 85, 85);">/</span>Homestead\r\n<span class="token comment" spellcheck="true" style="color: rgb(153, 153, 153);">\r\n// Clone the desired release...\r\n</span>git checkout v7<span class="token number" style="color: rgb(218, 86, 74);">.18</span><span class="token punctuation" style="color: rgb(153, 153, 153);">.</span><span class="token number" style="color: rgb(218, 86, 74);">0</span></code></pre><p style="line-height: 1.9; margin-top: 10px; margin-bottom: 20px;">Once you have cloned the Homestead repository, run the&nbsp;<font color="#f4645f" face="Operator Mono, Fira Code, Consolas, Monaco, Andale Mono, monospace"><span style="font-size: 12px; background: rgb(240, 242, 241); padding: 1px 5px; border-radius: 3px; text-shadow: white 0px 1px; white-space: pre; word-spacing: normal; line-height: 2; tab-size: 4; hyphens: none; box-shadow: rgba(0, 0, 0, 0.125) 0px 1px 1px; vertical-align: middle;">bash init</span></font><span class="token punctuation" style="">.</span>sh&nbsp;command from the Homestead directory to create the&nbsp;<font color="#f4645f" face="Operator Mono, Fira Code, Consolas, Monaco, Andale Mono, monospace"><span style="font-size: 12px; background: rgb(240, 242, 241); padding: 1px 5px; border-radius: 3px; text-shadow: white 0px 1px; white-space: pre; word-spacing: normal; line-height: 2; tab-size: 4; hyphens: none; box-shadow: rgba(0, 0, 0, 0.125) 0px 1px 1px; vertical-align: middle;">Homestead</span></font><span class="token punctuation" style="">.</span>yaml&nbsp;configuration file. The&nbsp;<font color="#f4645f" face="Operator Mono, Fira Code, Consolas, Monaco, Andale Mono, monospace"><span style="font-size: 12px; background: rgb(240, 242, 241); padding: 1px 5px; border-radius: 3px; text-shadow: white 0px 1px; white-space: pre; word-spacing: normal; line-height: 2; tab-size: 4; hyphens: none; box-shadow: rgba(0, 0, 0, 0.125) 0px 1px 1px; vertical-align: middle;">Homestead</span></font><span class="token punctuation" style="">.</span>yaml&nbsp;file will be placed in the Homestead directory:</p><pre class=" language-php" style="font-family: " operator="" mono",="" "fira="" code",="" consolas,="" monaco,="" "andale="" monospace;="" font-size:="" 12px;="" color:="" black;="" text-shadow:="" white="" 0px="" 1px;="" direction:="" ltr;="" word-break:="" normal;="" line-height:="" 2;="" tab-size:="" 4;="" hyphens:="" none;="" padding:="" 10px;="" margin-top:="" margin-bottom:="" 20px;="" background:="" rgba(238,="" 238,="" 0.35);="" border-radius:="" 3px;="" box-shadow:="" rgba(0,="" 0,="" 0.125)="" 1px="" vertical-align:="" middle;"=""><code class=" language-php" style="font-family: " operator="" mono",="" "fira="" code",="" consolas,="" monaco,="" "andale="" monospace;="" font-size:="" 12px;="" color:="" black;="" text-shadow:="" white="" 0px="" 1px;="" direction:="" ltr;="" white-space:="" pre;="" word-spacing:="" normal;="" word-break:="" line-height:="" 2;="" tab-size:="" 4;="" hyphens:="" none;="" vertical-align:="" middle;"=""><span class="token comment" spellcheck="true" style="color: rgb(153, 153, 153);">// Mac / Linux...\r\n</span>bash init<span class="token punctuation" style="color: rgb(153, 153, 153);">.</span>sh\r\n<span class="token comment" spellcheck="true" style="color: rgb(153, 153, 153);">\r\n// Windows...\r\n</span>init<span class="token punctuation" style="color: rgb(153, 153, 153);">.</span>bat</code></pre>                  \r\n<p><b><br></b></p><p><b>Step 4. Configuring Homestead - setting the provider</b></p><p style="line-height: 1.9; margin-top: 10px; margin-bottom: 20px;">The&nbsp;<font color="#f4645f" face="Operator Mono, Fira Code, Consolas, Monaco, Andale Mono, monospace"><span style="font-size: 12px; background: rgb(240, 242, 241); padding: 1px 5px; border-radius: 3px; text-shadow: white 0px 1px; white-space: pre; word-spacing: normal; line-height: 2; tab-size: 4; hyphens: none; box-shadow: rgba(0, 0, 0, 0.125) 0px 1px 1px; vertical-align: middle;">provider</span></font>&nbsp;key in your&nbsp;<font color="#f4645f" face="Operator Mono, Fira Code, Consolas, Monaco, Andale Mono, monospace"><span style="font-size: 12px; background: rgb(240, 242, 241); padding: 1px 5px; border-radius: 3px; text-shadow: white 0px 1px; white-space: pre; word-spacing: normal; line-height: 2; tab-size: 4; hyphens: none; box-shadow: rgba(0, 0, 0, 0.125) 0px 1px 1px; vertical-align: middle;">Homestead</span></font><span class="token punctuation" style="">.</span>yaml&nbsp;file indicates which Vagrant provider should be used:&nbsp;<font color="#f4645f" face="Operator Mono, Fira Code, Consolas, Monaco, Andale Mono, monospace"><span style="font-size: 12px; background: rgb(240, 242, 241); padding: 1px 5px; border-radius: 3px; text-shadow: white 0px 1px; white-space: pre; word-spacing: normal; line-height: 2; tab-size: 4; hyphens: none; box-shadow: rgba(0, 0, 0, 0.125) 0px 1px 1px; vertical-align: middle;">virtualbox</span></font>,&nbsp;<font color="#f4645f" face="Operator Mono, Fira Code, Consolas, Monaco, Andale Mono, monospace"><span style="font-size: 12px; background: rgb(240, 242, 241); padding: 1px 5px; border-radius: 3px; text-shadow: white 0px 1px; white-space: pre; word-spacing: normal; line-height: 2; tab-size: 4; hyphens: none; box-shadow: rgba(0, 0, 0, 0.125) 0px 1px 1px; vertical-align: middle;">vmware_fusion</span></font>,&nbsp;<font color="#f4645f" face="Operator Mono, Fira Code, Consolas, Monaco, Andale Mono, monospace"><span style="font-size: 12px; background: rgb(240, 242, 241); padding: 1px 5px; border-radius: 3px; text-shadow: white 0px 1px; white-space: pre; word-spacing: normal; line-height: 2; tab-size: 4; hyphens: none; box-shadow: rgba(0, 0, 0, 0.125) 0px 1px 1px; vertical-align: middle;">vmware_workstation</span></font>,&nbsp;<font color="#f4645f" face="Operator Mono, Fira Code, Consolas, Monaco, Andale Mono, monospace"><span style="font-size: 12px; background: rgb(240, 242, 241); padding: 1px 5px; border-radius: 3px; text-shadow: white 0px 1px; white-space: pre; word-spacing: normal; line-height: 2; tab-size: 4; hyphens: none; box-shadow: rgba(0, 0, 0, 0.125) 0px 1px 1px; vertical-align: middle;">parallels</span></font>&nbsp;or&nbsp;<font color="#f4645f" face="Operator Mono, Fira Code, Consolas, Monaco, Andale Mono, monospace"><span style="font-size: 12px; background: rgb(240, 242, 241); padding: 1px 5px; border-radius: 3px; text-shadow: white 0px 1px; white-space: pre; word-spacing: normal; line-height: 2; tab-size: 4; hyphens: none; box-shadow: rgba(0, 0, 0, 0.125) 0px 1px 1px; vertical-align: middle;">hyperv</span></font>. You may set this to the provider you prefer:</p><pre class=" language-php" style="font-family: " operator="" mono",="" "fira="" code",="" consolas,="" monaco,="" "andale="" monospace;="" font-size:="" 12px;="" color:="" black;="" text-shadow:="" white="" 0px="" 1px;="" direction:="" ltr;="" word-break:="" normal;="" line-height:="" 2;="" tab-size:="" 4;="" hyphens:="" none;="" padding:="" 10px;="" margin-top:="" margin-bottom:="" 20px;="" background:="" rgba(238,="" 238,="" 0.35);="" border-radius:="" 3px;="" box-shadow:="" rgba(0,="" 0,="" 0.125)="" 1px="" vertical-align:="" middle;"=""><code class=" language-php" style="font-family: " operator="" mono",="" "fira="" code",="" consolas,="" monaco,="" "andale="" monospace;="" font-size:="" 12px;="" color:="" black;="" text-shadow:="" white="" 0px="" 1px;="" direction:="" ltr;="" white-space:="" pre;="" word-spacing:="" normal;="" word-break:="" line-height:="" 2;="" tab-size:="" 4;="" hyphens:="" none;="" vertical-align:="" middle;"="">provider<span class="token punctuation" style="color: rgb(153, 153, 153);">:</span> virtualbox</code></pre><h4 style="-webkit-font-smoothing: antialiased; font-family: " whitney="" a",="" "whitney="" b",="" sans-serif;="" font-size:="" 17px;="" font-weight:="" 700;="" margin-top:="" 35px;="" color:="" rgb(82,="" 82,="" 82);"=""><br></h4><p style="-webkit-font-smoothing: antialiased;"><b><span style="color: rgb(51, 51, 51);">Step 5.&nbsp;</span><span style="color: rgb(51, 51, 51);">Configuring Homestead - Shared Folder</span></b></p><p style="-webkit-font-smoothing: antialiased;">The folders property of the Homestead.yaml file lists all of the folders you wish to share with your Homestead environment. As files within these folders are changed, they will be kept in sync between your local machine and the Homestead environment. You may configure as many shared folders as necessary:</p><h4 style="-webkit-font-smoothing: antialiased; margin-top: 35px;"><pre class=" language-php" style="color: black; font-family: " operator="" mono",="" "fira="" code",="" consolas,="" monaco,="" "andale="" monospace;="" font-size:="" 12px;="" font-weight:="" 400;="" text-shadow:="" white="" 0px="" 1px;="" direction:="" ltr;="" word-break:="" normal;="" line-height:="" 2;="" tab-size:="" 4;="" hyphens:="" none;="" padding:="" 10px;="" margin-top:="" margin-bottom:="" 20px;="" background:="" rgba(238,="" 238,="" 0.35);="" border-radius:="" 3px;="" box-shadow:="" rgba(0,="" 0,="" 0.125)="" 1px="" vertical-align:="" middle;"=""><code class=" language-php" style="font-family: " operator="" mono",="" "fira="" code",="" consolas,="" monaco,="" "andale="" monospace;="" font-size:="" 12px;="" color:="" black;="" text-shadow:="" white="" 0px="" 1px;="" direction:="" ltr;="" white-space:="" pre;="" word-spacing:="" normal;="" word-break:="" line-height:="" 2;="" tab-size:="" 4;="" hyphens:="" none;="" vertical-align:="" middle;"="">folders<span class="token punctuation" style="color: rgb(153, 153, 153);">:</span>\r\n    <span class="token operator" style="color: rgb(85, 85, 85);">-</span> map<span class="token punctuation" style="color: rgb(153, 153, 153);">:</span> <span class="token operator" style="color: rgb(85, 85, 85);">~</span><span class="token operator" style="color: rgb(85, 85, 85);">/</span>code\r\n      to<span class="token punctuation" style="color: rgb(153, 153, 153);">:</span> <span class="token operator" style="color: rgb(85, 85, 85);">/</span>home<span class="token operator" style="color: rgb(85, 85, 85);">/</span>vagrant<span class="token operator" style="color: rgb(85, 85, 85);">/</span>code</code></pre><p style="line-height: 1.9; margin-top: 10px; margin-bottom: 20px;">If you are only creating a few sites, this generic mapping will work just fine. However, as the number of sites continue to grow, you may begin to experience performance problems. This problem can be painfully apparent on low-end machines or projects that contain a very large number of files. If you are experiencing this issue, try mapping every project to its own Vagrant folder:</p><pre class=" language-php" style="color: black; font-family: " operator="" mono",="" "fira="" code",="" consolas,="" monaco,="" "andale="" monospace;="" font-size:="" 12px;="" font-weight:="" 400;="" text-shadow:="" white="" 0px="" 1px;="" direction:="" ltr;="" word-break:="" normal;="" line-height:="" 2;="" tab-size:="" 4;="" hyphens:="" none;="" padding:="" 10px;="" margin-top:="" margin-bottom:="" 20px;="" background:="" rgba(238,="" 238,="" 0.35);="" border-radius:="" 3px;="" box-shadow:="" rgba(0,="" 0,="" 0.125)="" 1px="" vertical-align:="" middle;"=""><code class=" language-php" style="font-family: " operator="" mono",="" "fira="" code",="" consolas,="" monaco,="" "andale="" monospace;="" font-size:="" 12px;="" color:="" black;="" text-shadow:="" white="" 0px="" 1px;="" direction:="" ltr;="" white-space:="" pre;="" word-spacing:="" normal;="" word-break:="" line-height:="" 2;="" tab-size:="" 4;="" hyphens:="" none;="" vertical-align:="" middle;"="">folders<span class="token punctuation" style="color: rgb(153, 153, 153);">:</span>\r\n    <span class="token operator" style="color: rgb(85, 85, 85);">-</span> map<span class="token punctuation" style="color: rgb(153, 153, 153);">:</span> <span class="token operator" style="color: rgb(85, 85, 85);">~</span><span class="token operator" style="color: rgb(85, 85, 85);">/</span>code<span class="token operator" style="color: rgb(85, 85, 85);">/</span>project1\r\n      to<span class="token punctuation" style="color: rgb(153, 153, 153);">:</span> <span class="token operator" style="color: rgb(85, 85, 85);">/</span>home<span class="token operator" style="color: rgb(85, 85, 85);">/</span>vagrant<span class="token operator" style="color: rgb(85, 85, 85);">/</span>code<span class="token operator" style="color: rgb(85, 85, 85);">/</span>project1\r\n\r\n    <span class="token operator" style="color: rgb(85, 85, 85);">-</span> map<span class="token punctuation" style="color: rgb(153, 153, 153);">:</span> <span class="token operator" style="color: rgb(85, 85, 85);">~</span><span class="token operator" style="color: rgb(85, 85, 85);">/</span>code<span class="token operator" style="color: rgb(85, 85, 85);">/</span>project2\r\n      to<span class="token punctuation" style="color: rgb(153, 153, 153);">:</span> <span class="token operator" style="color: rgb(85, 85, 85);">/</span>home<span class="token operator" style="color: rgb(85, 85, 85);">/</span>vagrant<span class="token operator" style="color: rgb(85, 85, 85);">/</span>code<span class="token operator" style="color: rgb(85, 85, 85);">/</span>project2</code></pre><p style="line-height: 1.9; margin-top: 10px; margin-bottom: 20px;">To enable&nbsp;<a href="https://www.vagrantup.com/docs/synced-folders/nfs.html" style="">NFS</a>, you only need to add a simple flag to your synced folder configuration:</p></h4><h4 style="font-family: " whitney="" a",="" "whitney="" b",="" sans-serif;="" font-weight:="" 700;="" color:="" rgb(82,="" 82,="" 82);="" margin-top:="" 35px;="" font-size:="" 17px;="" -webkit-font-smoothing:="" antialiased;"=""><span style="color: rgb(51, 51, 51); font-family: Poppins, sans-serif; font-size: 14px;"><b><br></b></span></h4><h4 style="font-family: " whitney="" a",="" "whitney="" b",="" sans-serif;="" font-weight:="" 700;="" color:="" rgb(82,="" 82,="" 82);="" margin-top:="" 35px;="" font-size:="" 17px;="" -webkit-font-smoothing:="" antialiased;"=""><span style="color: rgb(51, 51, 51); font-family: Poppins, sans-serif; font-size: 14px;"><b>Step 6. Configuring Homestead - Nginx Sites</b></span></h4><h4 style="margin-top: 35px; -webkit-font-smoothing: antialiased;"><p style="line-height: 1.9; margin-top: 10px; margin-bottom: 20px;">The&nbsp;<span style="background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; padding: 1px 5px; border-radius: 3px; text-shadow: white 0px 1px; line-height: 2; tab-size: 4; hyphens: none; box-shadow: rgba(0, 0, 0, 0.125) 0px 1px 1px; vertical-align: middle;">sites</span>&nbsp;property allows you to easily map a "domain" to a folder on your Homestead environment. A sample site configuration is included in the&nbsp;<span style="background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; padding: 1px 5px; border-radius: 3px; text-shadow: white 0px 1px; line-height: 2; tab-size: 4; hyphens: none; box-shadow: rgba(0, 0, 0, 0.125) 0px 1px 1px; vertical-align: middle;">Homestead</span><span class="token punctuation" style="">.</span>yaml&nbsp;file. Again, you may add as many sites to your Homestead environment as necessary. Homestead can serve as a convenient, virtualized environment for every Laravel project you are working on:</p><pre class=" language-php" style="color: black; font-family: " operator="" mono",="" "fira="" code",="" consolas,="" monaco,="" "andale="" monospace;="" font-size:="" 12px;="" font-weight:="" 400;="" text-shadow:="" white="" 0px="" 1px;="" direction:="" ltr;="" word-break:="" normal;="" line-height:="" 2;="" tab-size:="" 4;="" hyphens:="" none;="" padding:="" 10px;="" margin-top:="" margin-bottom:="" 20px;="" background:="" rgba(238,="" 238,="" 0.35);="" border-radius:="" 3px;="" box-shadow:="" rgba(0,="" 0,="" 0.125)="" 1px="" vertical-align:="" middle;"=""><code class=" language-php" style="font-family: " operator="" mono",="" "fira="" code",="" consolas,="" monaco,="" "andale="" monospace;="" font-size:="" 12px;="" color:="" black;="" text-shadow:="" white="" 0px="" 1px;="" direction:="" ltr;="" white-space:="" pre;="" word-spacing:="" normal;="" word-break:="" line-height:="" 2;="" tab-size:="" 4;="" hyphens:="" none;="" vertical-align:="" middle;"="">sites<span class="token punctuation" style="color: rgb(153, 153, 153);">:</span>\r\n    <span class="token operator" style="color: rgb(85, 85, 85);">-</span> map<span class="token punctuation" style="color: rgb(153, 153, 153);">:</span> homestead<span class="token punctuation" style="color: rgb(153, 153, 153);">.</span>test\r\n      to<span class="token punctuation" style="color: rgb(153, 153, 153);">:</span> <span class="token operator" style="color: rgb(85, 85, 85);">/</span>home<span class="token operator" style="color: rgb(85, 85, 85);">/</span>vagrant<span class="token operator" style="color: rgb(85, 85, 85);">/</span>code<span class="token operator" style="color: rgb(85, 85, 85);">/</span>Laravel<span class="token operator" style="color: rgb(85, 85, 85);">/</span><span class="token keyword" style="color: rgb(0, 119, 170);">public</span></code></pre><p style="line-height: 1.9; margin-top: 10px; margin-bottom: 20px;">If you change the&nbsp;<font color="#f4645f" face="Operator Mono, Fira Code, Consolas, Monaco, Andale Mono, monospace"><span style="font-size: 12px; background: rgb(240, 242, 241); padding: 1px 5px; border-radius: 3px; text-shadow: white 0px 1px; white-space: pre; word-spacing: normal; line-height: 2; tab-size: 4; hyphens: none; box-shadow: rgba(0, 0, 0, 0.125) 0px 1px 1px; vertical-align: middle;">sites</span></font>&nbsp;property after provisioning the Homestead box, you should re-run&nbsp;<font color="#f4645f" face="Operator Mono, Fira Code, Consolas, Monaco, Andale Mono, monospace"><span style="font-size: 12px; background: rgb(240, 242, 241); padding: 1px 5px; border-radius: 3px; text-shadow: white 0px 1px; white-space: pre; word-spacing: normal; line-height: 2; tab-size: 4; hyphens: none; box-shadow: rgba(0, 0, 0, 0.125) 0px 1px 1px; vertical-align: middle;">vagrant reload </span></font><span class="token operator" style="">--</span>provision&nbsp;to update the Nginx configuration on the virtual machine.</p></h4><h4 style="font-family: " whitney="" a",="" "whitney="" b",="" sans-serif;="" font-weight:="" 700;="" color:="" rgb(82,="" 82,="" 82);="" margin-top:="" 35px;="" font-size:="" 17px;="" -webkit-font-smoothing:="" antialiased;"=""><span style="color: rgb(51, 51, 51); font-family: Poppins, sans-serif; font-size: 14px;"><b>Step 7. Configuring Homestead - The Hosts Files</b></span></h4><h4 style="margin-top: 35px; -webkit-font-smoothing: antialiased;"><p style="line-height: 1.9; margin-top: 10px; margin-bottom: 20px;">You must add the "domains" for your Nginx sites to the&nbsp;<font color="#f4645f" face="Operator Mono, Fira Code, Consolas, Monaco, Andale Mono, monospace"><span style="font-size: 12px; background: rgb(240, 242, 241); padding: 1px 5px; border-radius: 3px; text-shadow: white 0px 1px; white-space: pre; word-spacing: normal; line-height: 2; tab-size: 4; hyphens: none; box-shadow: rgba(0, 0, 0, 0.125) 0px 1px 1px; vertical-align: middle;">hosts</span></font>&nbsp;file on your machine. The&nbsp;<font color="#f4645f" face="Operator Mono, Fira Code, Consolas, Monaco, Andale Mono, monospace"><span style="font-size: 12px; background: rgb(240, 242, 241); padding: 1px 5px; border-radius: 3px; text-shadow: white 0px 1px; white-space: pre; word-spacing: normal; line-height: 2; tab-size: 4; hyphens: none; box-shadow: rgba(0, 0, 0, 0.125) 0px 1px 1px; vertical-align: middle;">hosts</span></font>&nbsp;file will redirect requests for your Homestead sites into your Homestead machine. On Mac and Linux, this file is located at&nbsp;<span class="token operator" style="background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; padding: 1px 5px; border-radius: 3px; text-shadow: white 0px 1px; direction: ltr; word-break: normal; line-height: 2; tab-size: 4; hyphens: none; box-shadow: rgba(0, 0, 0, 0.125) 0px 1px 1px; vertical-align: middle;">/</span><span style="background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; padding: 1px 5px; border-radius: 3px; text-shadow: white 0px 1px; line-height: 2; tab-size: 4; hyphens: none; box-shadow: rgba(0, 0, 0, 0.125) 0px 1px 1px; vertical-align: middle;">etc</span><span class="token operator" style="">/</span>hosts. On Windows, it is located at&nbsp;<font color="#f4645f" face="Operator Mono, Fira Code, Consolas, Monaco, Andale Mono, monospace"><span style="font-size: 12px; background: rgb(240, 242, 241); padding: 1px 5px; border-radius: 3px; text-shadow: white 0px 1px; white-space: pre; word-spacing: normal; line-height: 2; tab-size: 4; hyphens: none; box-shadow: rgba(0, 0, 0, 0.125) 0px 1px 1px; vertical-align: middle;">C</span></font><span class="token punctuation" style="">:</span>\\<span class="token package">Windows<span class="token punctuation" style="">\\</span>System32<span class="token punctuation" style="">\\</span>drivers<span class="token punctuation" style="">\\</span>etc<span class="token punctuation" style="">\\</span>hosts</span>. The lines you add to this file will look like the following:</p><pre class=" language-php" style="color: black; font-family: " operator="" mono",="" "fira="" code",="" consolas,="" monaco,="" "andale="" monospace;="" font-size:="" 12px;="" font-weight:="" 400;="" text-shadow:="" white="" 0px="" 1px;="" direction:="" ltr;="" word-break:="" normal;="" line-height:="" 2;="" tab-size:="" 4;="" hyphens:="" none;="" padding:="" 10px;="" margin-top:="" margin-bottom:="" 20px;="" background:="" rgba(238,="" 238,="" 0.35);="" border-radius:="" 3px;="" box-shadow:="" rgba(0,="" 0,="" 0.125)="" 1px="" vertical-align:="" middle;"=""><code class=" language-php" style="font-family: " operator="" mono",="" "fira="" code",="" consolas,="" monaco,="" "andale="" monospace;="" font-size:="" 12px;="" color:="" black;="" text-shadow:="" white="" 0px="" 1px;="" direction:="" ltr;="" white-space:="" pre;="" word-spacing:="" normal;="" word-break:="" line-height:="" 2;="" tab-size:="" 4;="" hyphens:="" none;="" vertical-align:="" middle;"=""><span class="token number" style="color: rgb(218, 86, 74);">192.168</span><span class="token punctuation" style="color: rgb(153, 153, 153);">.</span><span class="token number" style="color: rgb(218, 86, 74);">10.10</span>  homestead<span class="token punctuation" style="color: rgb(153, 153, 153);">.</span>test</code></pre><p style="line-height: 1.9; margin-top: 10px; margin-bottom: 20px;">Make sure the IP address listed is the one set in your&nbsp;<font color="#f4645f" face="Operator Mono, Fira Code, Consolas, Monaco, Andale Mono, monospace"><span style="font-size: 12px; background: rgb(240, 242, 241); padding: 1px 5px; border-radius: 3px; text-shadow: white 0px 1px; white-space: pre; word-spacing: normal; line-height: 2; tab-size: 4; hyphens: none; box-shadow: rgba(0, 0, 0, 0.125) 0px 1px 1px; vertical-align: middle;">Homestead</span></font><span class="token punctuation" style="">.</span>yaml&nbsp;file. Once you have added the domain to your&nbsp;<font color="#f4645f" face="Operator Mono, Fira Code, Consolas, Monaco, Andale Mono, monospace"><span style="font-size: 12px; background: rgb(240, 242, 241); padding: 1px 5px; border-radius: 3px; text-shadow: white 0px 1px; white-space: pre; word-spacing: normal; line-height: 2; tab-size: 4; hyphens: none; box-shadow: rgba(0, 0, 0, 0.125) 0px 1px 1px; vertical-align: middle;">hosts</span></font>&nbsp;file and launched the Vagrant box you will be able to access the site via your web browser:</p><pre class=" language-php" style="color: black; font-family: " operator="" mono",="" "fira="" code",="" consolas,="" monaco,="" "andale="" monospace;="" font-size:="" 12px;="" font-weight:="" 400;="" text-shadow:="" white="" 0px="" 1px;="" direction:="" ltr;="" word-break:="" normal;="" line-height:="" 2;="" tab-size:="" 4;="" hyphens:="" none;="" padding:="" 10px;="" margin-top:="" margin-bottom:="" 20px;="" background:="" rgba(238,="" 238,="" 0.35);="" border-radius:="" 3px;="" box-shadow:="" rgba(0,="" 0,="" 0.125)="" 1px="" vertical-align:="" middle;"=""><code class=" language-php" style="font-family: " operator="" mono",="" "fira="" code",="" consolas,="" monaco,="" "andale="" monospace;="" font-size:="" 12px;="" color:="" black;="" text-shadow:="" white="" 0px="" 1px;="" direction:="" ltr;="" white-space:="" pre;="" word-spacing:="" normal;="" word-break:="" line-height:="" 2;="" tab-size:="" 4;="" hyphens:="" none;="" vertical-align:="" middle;"="">http<span class="token punctuation" style="color: rgb(153, 153, 153);">:</span><span class="token operator" style="color: rgb(85, 85, 85);">/</span><span class="token operator" style="color: rgb(85, 85, 85);">/</span>homestead<span class="token punctuation" style="color: rgb(153, 153, 153);">.</span>test</code></pre><p style="color: rgb(82, 82, 82); font-family: " whitney="" ssm="" a",="" "whitney="" b",="" sans-serif;="" font-size:="" 13px;="" font-weight:="" 400;="" line-height:="" 1.9;="" margin-top:="" 10px;="" margin-bottom:="" 20px;"=""><a name="launching-the-vagrant-box" style="color: rgb(244, 100, 95); text-decoration-line: underline;"></a></p></h4><h4 style="font-family: " whitney="" a",="" "whitney="" b",="" sans-serif;="" font-weight:="" 700;="" color:="" rgb(82,="" 82,="" 82);="" margin-top:="" 35px;="" font-size:="" 17px;="" -webkit-font-smoothing:="" antialiased;"=""><span style="color: rgb(51, 51, 51); font-family: Poppins, sans-serif; font-size: 14px;"><br></span></h4><h4 style="font-family: " whitney="" a",="" "whitney="" b",="" sans-serif;="" font-weight:="" 700;="" color:="" rgb(82,="" 82,="" 82);="" margin-top:="" 35px;="" font-size:="" 17px;="" -webkit-font-smoothing:="" antialiased;"=""><span style="color: rgb(51, 51, 51); font-family: Poppins, sans-serif; font-size: 14px;"><b>Step 8. Launching The Vagrant Box</b></span></h4><h4 style="margin-top: 35px; -webkit-font-smoothing: antialiased;"><p style="line-height: 1.9; margin-top: 10px; margin-bottom: 20px;">Once you have edited the&nbsp;<font color="#f4645f" face="Operator Mono, Fira Code, Consolas, Monaco, Andale Mono, monospace"><span style="font-size: 12px; background: rgb(240, 242, 241); padding: 1px 5px; border-radius: 3px; text-shadow: white 0px 1px; white-space: pre; word-spacing: normal; line-height: 2; tab-size: 4; hyphens: none; box-shadow: rgba(0, 0, 0, 0.125) 0px 1px 1px; vertical-align: middle;">Homestead</span></font><span class="token punctuation" style="">.</span>yaml&nbsp;to your liking, run the&nbsp;<font color="#f4645f" face="Operator Mono, Fira Code, Consolas, Monaco, Andale Mono, monospace"><span style="font-size: 12px; background: rgb(240, 242, 241); padding: 1px 5px; border-radius: 3px; text-shadow: white 0px 1px; white-space: pre; word-spacing: normal; line-height: 2; tab-size: 4; hyphens: none; box-shadow: rgba(0, 0, 0, 0.125) 0px 1px 1px; vertical-align: middle;">vagrant up</span></font>&nbsp;command from your Homestead directory. Vagrant will boot the virtual machine and automatically configure your shared folders and Nginx sites.</p><p style="line-height: 1.9; margin-top: 10px; margin-bottom: 20px;">To destroy the machine, you may use the&nbsp;<font color="#f4645f" face="Operator Mono, Fira Code, Consolas, Monaco, Andale Mono, monospace"><span style="font-size: 12px; background: rgb(240, 242, 241); padding: 1px 5px; border-radius: 3px; text-shadow: white 0px 1px; white-space: pre; word-spacing: normal; line-height: 2; tab-size: 4; hyphens: none; box-shadow: rgba(0, 0, 0, 0.125) 0px 1px 1px; vertical-align: middle;">vagrant destroy </span></font><span class="token operator" style="">--</span>force&nbsp;command.</p></h4><h4 style="margin-top: 35px; -webkit-font-smoothing: antialiased;"><p style="line-height: 1.9; margin-top: 10px; margin-bottom: 20px; font-size: 13px; font-family: " whitney="" ssm="" a",="" "whitney="" b",="" sans-serif;="" font-weight:="" 400;"=""><br></p></h4>                  ', '2019-01-09 18:24:57', 0),
(11, 'Sending flash messages with res.direct(''/'') in nodeJS', 5, '<p>The flash is a special area of the session used for storing messages. Messages are written to the flash and cleared after being displayed to the user. Because once passed to the route, flash messages are cleared, messages are required to be passed along as a parameter for any redirect.<br></p>\r\n<p style="line-height: 1.6em;">\r\n<span style="font-weight: bold;">Code Example</span>\r\n</p>\r\n<p style="line-height: 1.6em;">\r\n<span style="font-weight: bold; background-color: rgb(245, 245, 245); color: rgb(51, 51, 51); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px;">Controller (route)</span></p>\r\n<pre>app.get(''/:id'', function(req, res) {&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>  if (req.params.id === ''key'') {<br>    req.flash(''info'', ''this is a key message'');<br>    res.redirect(''/view'');<br>  }<br>})\r\n<br>app.get(''/view'', function(req, res) {&nbsp;\r\n  var message = '''';&nbsp;\r\n  if (typeof res.locals.messages.info != ''undefined'') {&nbsp;\r\n    messages = res.locals.messages.error;&nbsp;\r\n  };&nbsp;\r\n\r\n  res.render(''info'', {&nbsp;\r\n&nbsp;&nbsp;  message: message&nbsp;\r\n  });&nbsp;\r\n}) </pre>\r\n<p style="line-height: 1.6em;">\r\n<span style="font-weight: bold; background-color: rgb(245, 245, 245); color: rgb(51, 51, 51); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px;">main server.js (set Middleware)</span></p>\r\n<pre>var flash = require(''connect-flash);&nbsp;<br>\r\napp.use(flash());<br>\r\napp.use(function(req, res, next) {&nbsp;<br> res.locals.messages = req.flash();<br> next();&nbsp;<br>});<br>\r\nview template (ejs)<br>&lt;% if (typeof message != ''undefined'') { %&gt;<br> &lt;div class="alert alert-info"&gt;&nbsp;<br> &lt;= message %&gt;<br> &lt;/div&gt;<br>&lt;% } %&gt;</pre>', '2019-01-10 17:59:37', 0),
(12, '__dirname when deploying nodeJS on Herok', 5, '<p><span style="font-family: Poppins;">In&nbsp;<b>node.js</b>,&nbsp;</span><span style="background-color: rgb(245, 245, 245); color: rgb(51, 51, 51); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px;">__dirname&nbsp;</span><span style="font-family: Poppins;">is the name of </span><span style="font-family: Poppins;">directory</span><span style="font-family: Poppins;"> that the currently executing script resides in. For example, when running&nbsp;</span><span style="background-color: rgb(245, 245, 245); color: rgb(51, 51, 51); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px;">node app.js&nbsp;</span><span style="font-family: Poppins;">from <b>Users/</b></span><span style="font-family: Poppins;"><b>mjr</b></span><span style="font-family: Poppins;">&nbsp;to serve static files located in subfolders,&nbsp;''<b>Users/mjr/views</b>'', the configuration would be&nbsp;</span><span style="background-color: rgb(245, 245, 245); color: rgb(51, 51, 51); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px;">app.use(express.static(__dirname + ''/views'')&nbsp;</span><span style="font-family: Poppins;">.</span></p><p></p><p style="margin-top: 30px; margin-bottom: 30px; line-height: 1.5;" times="" new="" roman",="" serif;="" font-size:="" 20px;"=""><span style="font-family: Poppins;">In&nbsp;<b>node.js</b>,&nbsp;</span><span style="background-color: rgb(245, 245, 245); color: rgb(51, 51, 51); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px;">__dirname&nbsp;</span>is the name of <span style="font-family: Poppins;">directory</span><span style="font-family: Poppins;"> that the currently executing script resides in. For example, when running&nbsp;</span><span style="background-color: rgb(245, 245, 245); color: rgb(51, 51, 51); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px;">node app.js&nbsp;</span><span style="font-family: Poppins;">from <b>Users/</b></span><span style="font-family: Poppins;"><b>mjr</b></span><span style="font-family: Poppins;">, to serve static files located in subfolders,&nbsp;''<b>Users/mjr/views</b>'', the configuration would be&nbsp;</span><span style="background-color: rgb(245, 245, 245); color: rgb(51, 51, 51); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px;">app.use(express.static(__dirname + ''/views'') ).</span></p><span style="font-family: Poppins;">This would work locally with&nbsp;Node.js + Express + </span><span style="font-family: Poppins;">Client</span><span style="font-family: Poppins;">-side Javascript view engines&nbsp;in views directory, but not when deployed to Heroku.&nbsp;</span><span style="background-color: rgb(245, 245, 245); color: rgb(51, 51, 51); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px;">__dirname&nbsp;</span>is not specific to <span style="font-family: Poppins;" class="">heroku</span><span style="font-family: Poppins;">, that''s provided by&nbsp;node.js.</span><p></p><p style="margin-top: 30px; margin-bottom: 30px; line-height: 1.5;" times="" new="" roman",="" serif;="" font-size:="" 20px;"=""><span style="font-family: Poppins;">To specify currently executing directory,&nbsp;<b>process.env.PWD</b>&nbsp;</span><span style="font-family: Poppins;">sould</span><span style="font-family: Poppins;"> be used when deploying to Heroku.</span></p>                           ', '2019-01-11 16:29:10', 0);
INSERT INTO `posts` (`pid`, `title`, `tag_id`, `content`, `createdon`, `viewed`) VALUES
(13, 'jQuery Click Event - $.click() vs $.on(''click'') ', 2, '<span style="background-color: rgb(245, 245, 245); color: rgb(51, 51, 51); font-family: Menlo, Monaco, Consolas, " courier="" new",="" monospace;="" font-size:="" 13px;"="">$.click()</span> method is just a shorthand for&nbsp;<span style="background-color: rgb(245, 245, 245); color: rgb(51, 51, 51); font-family: Menlo, Monaco, Consolas, " courier="" new",="" monospace;="" font-size:="" 13px;"="">$.on("click", handler)</span>. However, in some cases,&nbsp;<span style="background-color: rgb(245, 245, 245); color: rgb(51, 51, 51); font-family: Menlo, Monaco, Consolas, " courier="" new",="" monospace;="" font-size:="" 13px;"="">$.on("click", handler)&nbsp;</span>should be used rather than&nbsp;<span style="background-color: rgb(245, 245, 245); color: rgb(51, 51, 51); font-family: Menlo, Monaco, Consolas, " courier="" new",="" monospace;="" font-size:="" 13px;"="">$.click()</span>.<p></p><ul><li><span style="background-color: rgb(245, 245, 245); color: rgb(51, 51, 51); font-family: Menlo, Monaco, Consolas, " courier="" new",="" monospace;="" font-size:="" 13px;"="">$.click</span> events only work when an element gets rendered and are attached to elements loaded when the DOM is ready.</li><li><span style="background-color: rgb(245, 245, 245); color: rgb(51, 51, 51); font-family: Menlo, Monaco, Consolas, " courier="" new",="" monospace;="" font-size:="" 13px;"="">$.on</span> bind events to elements added dynamically to the DOM, which is helpful when you want to attach an event to DOM elements that are rendered on ajax request or something else after the DOM is ready.</li><li><span style="background-color: rgb(245, 245, 245); color: rgb(51, 51, 51); font-family: Menlo, Monaco, Consolas, " courier="" new",="" monospace;="" font-size:="" 13px;"="">$.on</span> use less memory in most cases. With $.click(), a separate handler gets created for every single element that matches the selector, which means many matching elements would create many identicla handlers and thus increase memory footprint.</li><li>With .on(), a single handler for all elements that match your selector, including the ones created dynamically.</li></ul><p><br></p><p><b>When adding click event to the dynamically added elements with <span style="background-color: rgb(245, 245, 245); color: rgb(51, 51, 51); font-family: Menlo, Monaco, Consolas, " courier="" new",="" monospace;="" font-size:="" 13px;"="">$("target").on("click","selector",handler)</span></b></p><b>, ''selector'' would be the dynamically added element. Note that ''target'' element must exist at the time your code makes the call to&nbsp;<span style="background-color: rgb(245, 245, 245); color: rgb(51, 51, 51); font-family: Menlo, Monaco, Consolas, " courier="" new",="" monospace;="" font-size:="" 13px;"="">.on().</span></b><p></p>                  ', '2019-01-14 19:17:18', 0),
(14, 'Braintree (PayPal) Payment gateway integration in PHP', 1, '<p><b>1. Download Braintree SDK</b></p><p>Check your PHP version and download braintree&nbsp;SDK.&nbsp;</p><p>(https://developers.braintreepayments.com/start/hello-server/php).</p><p>If your server runs on PHP version which is &lt; 5.4.0?,&nbsp;you can use (braintree_php-2.40.0) Braintree SDK. (https://codeload.github.com/braintree/braintree_php/zip/2.40.0)</p><p><br></p><p><b>2.a Drop-in UI</b></p><p>Braintree''s Drop-in UI offers a complete, ready-made payment UI for a quick and easy way to accept payments. It''s equally as easy to maintain PCI compliance&nbsp; with Drop-in.</p><p>The UI includes a card entry form and, if enabled, PayPal/Vendmo buttons. When a user completes the UI, your client code obtains a payment&nbsp;method nonce for use on your server.</p><p>In the drop in UI, you will deal with only a single token (payment_method_nonce) which communicate from website client to website server and then website&nbsp;server to Braintree server.</p><p><br></p><p><b>2.b Custom Integration</b></p><p>In Custom integration, you can create your own payment form with custom colors and layout and collect the customer information before submitting&nbsp;payment gateway.&nbsp;</p><p><br></p><p><b>3. Sign up for Braintree</b></p><p>Before proceed for Braintree API integration, we need to sign up for Braintree SDK, which if free of cost for everyone.<br>https://www.braintreepayments.com/get-started&nbsp;</p><p>After successful&nbsp;sign up, we will get,&nbsp;<b>Merchant ID, Public key, Private Key,</b></p><p><b><br></b></p><p><b>4. Payment Gateway Integration</b></p><p>a. Server side</p><pre>// Braintree library \r\nrequire ''braintree/lib/Braintree.php'';\r\n\r\n$params = array(\r\n	"testmode"   =&gt; "on",\r\n	"merchantid" =&gt; "xxxxxxx",\r\n	"publickey"  =&gt; "xxxxxxx",\r\n	"privatekey" =&gt; "xxxxxxxxxxxxxxxxxxxxx",\r\n);\r\n\r\nif ($params[''testmode''] == "on")\r\n{\r\n	Braintree_Configuration::environment(''sandbox'');\r\n}\r\nelse\r\n{\r\n	Braintree_Configuration::environment(''production'');\r\n}\r\n\r\nBraintree_Configuration::merchantId($params["merchantid"]);\r\nBraintree_Configuration::publicKey($params["publickey"]);\r\nBraintree_Configuration::privateKey($params["privatekey"]);\r\n\r\nif(isset($_POST[''payment_method_nonce'']))\r\n{\r\n	// Customer details\r\n	$customer_firstname   = $_POST[''c_firstname''];\r\n	$customer_lastname    = $_POST[''c_lastname''];\r\n	$customer_email       = $_POST[''c_email''];\r\n	$customer_phonenumber = $_POST[''c_phonenumber''];\r\n	// EOF Customer details\r\n\r\n	// Customer billing details\r\n	$firstname = $_POST[''firstname''];\r\n	$lastname  = $_POST[''lastname''];\r\n	$email     = $_POST[''c_email''];\r\n	$address1  = $_POST[''address1''];\r\n	$address2  = $_POST[''address2''];\r\n	$city      = $_POST[''city''];\r\n	$state     = $_POST[''state''];\r\n	$postcode  = $_POST[''postcode''];\r\n	$country   = $_POST[''country''];\r\n	$phone     = $_POST[''c_phonenumber''];\r\n	// EOF Customer billing details\r\n\r\n	$sale = array(\r\n	&nbsp;&nbsp;&nbsp;&nbsp;''amount''   =&gt; $_POST[''amount''],\r\n	&nbsp;&nbsp;&nbsp;&nbsp;''orderId''  =&gt; $_POST[''invoiceid''],\r\n	&nbsp;&nbsp;&nbsp;&nbsp;''paymentMethodNonce'' =&gt; $_POST[''payment_method_nonce''],   // Autogenerated field from braintree\r\n	&nbsp;&nbsp;&nbsp;&nbsp;''customer'' =&gt; array(\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	''firstName'' =&gt; $customer_firstname,\r\n	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;''lastName''  =&gt; $customer_lastname,\r\n		''phone''     =&gt; $customer_phonenumber,\r\n		''email''     =&gt; $customer_email\r\n	&nbsp;&nbsp;&nbsp;&nbsp;),\r\n	&nbsp;&nbsp;&nbsp;&nbsp;''billing'' =&gt; array(\r\n		''firstName''         =&gt; $firstname,\r\n		''lastName''          =&gt; $lastname,\r\n		''streetAddress''     =&gt; $address1,\r\n		''extendedAddress''   =&gt; $address2,\r\n		''locality''          =&gt; $city,\r\n		''region''            =&gt; $state,\r\n		''postalCode''        =&gt; $postcode,\r\n		''countryCodeAlpha2'' =&gt; $country\r\n	&nbsp;&nbsp;&nbsp;&nbsp;),\r\n	&nbsp;&nbsp;&nbsp;&nbsp;''options'' =&gt; array(\r\n		''submitForSettlement''   =&gt; true,\r\n		''storeInVaultOnSuccess'' =&gt; true\r\n	 &nbsp;&nbsp;&nbsp;&nbsp;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);\r\n						\r\n&nbsp;&nbsp;&nbsp;&nbsp;$result = Braintree_Transaction::sale($sale);\r\n&nbsp;&nbsp;&nbsp;&nbsp;if ($result-&gt;success)\r\n&nbsp;&nbsp;&nbsp;&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo "Braintree_cust_id : ".$braintree_cust_id = $result-&gt;transaction-&gt;_attributes[''customer''][''id'']; // After first successfull transaction, save this Braintree_cust_id in DB and use for future transactions\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;else\r\n&nbsp;&nbsp;&nbsp;&nbsp;{\r\n	echo "Error : ".$result-&gt;_attributes[''message''];\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n	\r\n&nbsp;&nbsp;&nbsp;&nbsp;print_r($result); exit;\r\n}\r\nelse\r\nif (isset($_POST[''braintree_cust_id'']))\r\n{\r\n	$sale = array(\r\n		''customerId'' =&gt; $braintree_cust_id,\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	''amount''     =&gt; $_POST[''amount''],\r\n		''orderId''    =&gt; $_POST[''invoiceid''],  // This field is get back in responce to track this transaction\r\n		''options''    =&gt; array(\r\n	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	''submitForSettlement'' =&gt; true\r\n		)\r\n	);\r\n}\r\nelse\r\nif (isset($_POST[''action'']) &amp;&amp; $_POST[''action''] == ''generateclienttoken'')\r\n{\r\n	//$braintree_cust_id = "31904842";\r\n	// Generate the nonce and send it back\r\n	try\r\n	{\r\n		$clientToken = Braintree_ClientToken::generate(array(\r\n			// use customerId to get a previous customer from the vault\r\n			// ''customerId'' =&gt; $braintree_cust_id    // $braintree_cust_id is Fetch from DB\r\n		));\r\n	}\r\n	catch(Exception $e)\r\n	{\r\n		// cannot get the customer from the vault!!\r\n		$clientToken = Braintree_ClientToken::generate();\r\n	}\r\n	\r\n	echo $clientToken; exit;\r\n}\r\n?&gt;</pre><p>b. Front-end Side (Html/CSS)</p><pre>&lt;h1 class="bt_title"&gt;Braintree Drop-in&lt;/h1&gt;\r\n&lt;div class="dropin-page"&gt;\r\n  &lt;form id="checkout" method="post" action=""&gt;\r\n    &lt;h4 class="bt_title"&gt;Customer Information&lt;/h4&gt;\r\n    &lt;input type="hidden" name="invoiceid" value="123456"&gt;\r\n    &lt;fieldset class="one_off_firstname"&gt;\r\n      &lt;label class="input-label" for="firstname"&gt;\r\n      &lt;span class="field-name"&gt;First Name&lt;/span&gt;\r\n      &lt;input id="c_firstname" name="c_firstname" class="input-field card-field" type="text" placeholder="First Name" autocomplete="off"&gt;\r\n      &lt;div class="invalid-bottom-bar"&gt;&lt;/div&gt;\r\n      &lt;/label&gt;\r\n    &lt;/fieldset&gt;\r\n    &lt;fieldset class="one_off_lastname"&gt;\r\n      &lt;label class="input-label" for="lastname"&gt;\r\n      &lt;span class="field-name"&gt;Last Name&lt;/span&gt;\r\n      &lt;input id="c_lastname" name="c_lastname" class="input-field card-field" type="text" placeholder="Last Name" autocomplete="off"&gt;\r\n      &lt;div class="invalid-bottom-bar"&gt;&lt;/div&gt;\r\n      &lt;/label&gt;\r\n    &lt;/fieldset&gt;\r\n    &lt;fieldset class="one_off_lastname"&gt;\r\n      &lt;label class="input-label" for="email"&gt;\r\n      &lt;span class="field-name"&gt;Email&lt;/span&gt;\r\n      &lt;input id="c_email" name="c_email" class="input-field card-field" type="text" placeholder="Email" autocomplete="off"&gt;\r\n      &lt;div class="invalid-bottom-bar"&gt;&lt;/div&gt;\r\n      &lt;/label&gt;\r\n    &lt;/fieldset&gt;\r\n    &lt;fieldset class="one_off_phonenumber"&gt;\r\n      &lt;label class="input-label" for="phonenumber"&gt;\r\n      &lt;span class="field-name"&gt;Phone Number&lt;/span&gt;\r\n      &lt;input id="c_phonenumber" name="c_phonenumber" class="input-field card-field" type="text"placeholder="Phone Number" autocomplete="off"&gt;\r\n      &lt;div class="invalid-bottom-bar"&gt;&lt;/div&gt;\r\n      &lt;/label&gt;\r\n    &lt;/fieldset&gt;\r\n    &lt;h4 class="bt_title"&gt;Customer Billing Information&lt;/h4&gt;\r\n    &lt;fieldset class="one_off_firstname"&gt;\r\n      &lt;label class="input-label" for="firstname"&gt;\r\n      &lt;span class="field-name"&gt;First Name&lt;/span&gt;\r\n      &lt;input id="firstname" name="firstname" class="input-field card-field" type="text" placeholder="First Name" autocomplete="off"&gt;\r\n      &lt;div class="invalid-bottom-bar"&gt;&lt;/div&gt;\r\n      &lt;/label&gt;\r\n    &lt;/fieldset&gt;\r\n    &lt;fieldset class="one_off_lastname"&gt;\r\n      &lt;label class="input-label" for="lastname"&gt;\r\n      &lt;span class="field-name"&gt;Last Name&lt;/span&gt;\r\n      &lt;input id="lastname" name="lastname" class="input-field card-field" type="text" placeholder="Last Name" autocomplete="off"&gt;\r\n      &lt;div class="invalid-bottom-bar"&gt;&lt;/div&gt;\r\n      &lt;/label&gt;\r\n    &lt;/fieldset&gt;\r\n    &lt;fieldset class="one_off_address1"&gt;\r\n      &lt;label class="input-label" for="address1"&gt;\r\n      &lt;span class="field-name"&gt;Address1&lt;/span&gt;\r\n      &lt;input id="address1" name="address1" class="input-field card-field" type="text" placeholder="Address" autocomplete="off"&gt;\r\n      &lt;div class="invalid-bottom-bar"&gt;&lt;/div&gt;\r\n      &lt;/label&gt;\r\n    &lt;/fieldset&gt;\r\n    &lt;fieldset class="one_off_address2"&gt;\r\n      &lt;label class="input-label" for="address2"&gt;\r\n      &lt;span class="field-name"&gt;Address2&lt;/span&gt;\r\n      &lt;input id="address2" name="address2" class="input-field card-field" type="text" placeholder="Address" autocomplete="off"&gt;\r\n      &lt;div class="invalid-bottom-bar"&gt;&lt;/div&gt;\r\n      &lt;/label&gt;\r\n    &lt;/fieldset&gt;\r\n    &lt;fieldset class="one_off_city"&gt;\r\n      &lt;label class="input-label" for="city"&gt;\r\n      &lt;span class="field-name"&gt;City/Town&lt;/span&gt;\r\n      &lt;input id="city" name="city" class="input-field card-field" type="text" placeholder="City/Town" autocomplete="off"&gt;\r\n      &lt;div class="invalid-bottom-bar"&gt;&lt;/div&gt;\r\n      &lt;/label&gt;\r\n    &lt;/fieldset&gt;\r\n    &lt;fieldset class="one_off_state"&gt;\r\n      &lt;label class="input-label" for="state"&gt;\r\n      &lt;span class="field-name"&gt;State/Region&lt;/span&gt;\r\n      &lt;input id="state" name="state" class="input-field card-field" type="text" placeholder="State/Region" autocomplete="off"&gt;\r\n      &lt;div class="invalid-bottom-bar"&gt;&lt;/div&gt;\r\n      &lt;/label&gt;\r\n    &lt;/fieldset&gt;\r\n    &lt;fieldset class="one_off_postcode"&gt;\r\n      &lt;label class="input-label" for="postcode"&gt;\r\n      &lt;span class="field-name"&gt;Post Code&lt;/span&gt;\r\n      &lt;input id="postcode" name="postcode" class="input-field card-field" type="text" placeholder="Post Code" autocomplete="off"&gt;\r\n      &lt;div class="invalid-bottom-bar"&gt;&lt;/div&gt;\r\n      &lt;/label&gt;\r\n    &lt;/fieldset&gt;\r\n    &lt;fieldset class="one_off_country"&gt;\r\n      &lt;label class="input-label" for="country"&gt;\r\n      &lt;span class="field-name"&gt;Country&lt;/span&gt;\r\n      &lt;input id="country" name="country" class="input-field card-field" type="text" placeholder="Country" autocomplete="off"&gt;\r\n      &lt;div class="invalid-bottom-bar"&gt;&lt;/div&gt;\r\n      &lt;/label&gt;\r\n    &lt;/fieldset&gt;\r\n    &lt;h4 class="bt_title"&gt;Credit Card Details&lt;/h4&gt;\r\n    &lt;div id="dropin"&gt;\r\n      &lt;div class="loader_container"&gt;\r\n        &lt;div&gt;Loading...&lt;/div&gt;\r\n      &lt;/div&gt;\r\n    &lt;/div&gt;\r\n    &lt;fieldset class="one_off_amount"&gt;\r\n      &lt;?php\r\n                if(isset($_GET[''amt''])) {\r\n                    $amt = number_format((float)$_GET[''amt''], 2, ''.'', '''');\r\n            ?&gt;\r\n      &lt;h3&gt;Your bill is for an amount of $ &lt;?php echo $amt; ?&gt;&lt;/h3&gt;\r\n      &lt;input type="hidden" name="amount" step="any" id="amount" value="&lt;?php echo $amt; ?&gt;" /&gt;\r\n      &lt;?php\r\n                }else{\r\n            ?&gt;\r\n      &lt;label class="input-label" for="amount"&gt;\r\n      &lt;span class="field-name"&gt;Amount&lt;/span&gt;\r\n      &lt;input id="amount" name="amount" class="input-field card-field" type="number" inputmode="numeric" placeholder="Amount" autocomplete="off" step="any"&gt;\r\n      &lt;div class="invalid-bottom-bar"&gt;&lt;/div&gt;\r\n      &lt;/label&gt;\r\n      &lt;?php\r\n                }\r\n            ?&gt;\r\n    &lt;/fieldset&gt;\r\n    &lt;div class="btn_container"&gt;\r\n      &lt;input type="submit" value="Make Payment" class="pay-btn"&gt;\r\n      &lt;span class="loader_img"&gt;&lt;/span&gt; &lt;/div&gt;\r\n  &lt;/form&gt;\r\n&lt;/div&gt;\r\n&lt;script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.2/jquery.min.js"&gt;&lt;/script&gt; \r\n&lt;script src="https://js.braintreegateway.com/v2/braintree.js"&gt;&lt;/script&gt; </pre><p>c. JavaScript</p><pre>\r\n&lt;!-- TO DO : Place below JS code in js file and include that JS file --&gt; \r\n&lt;script type="text/javascript"&gt;\r\n(function() {\r\n    \r\n    var BTFn = {};\r\n\r\n    BTFn.sendJSON = function($pay_btn) {\r\n\r\n        $.ajax({\r\n            dataType: "text",\r\n            type: "POST",\r\n            data:  { action: "generateclienttoken"},\r\n            url: "braintree_dropin_demo.php",\r\n            success: function (req) {\r\n                BTFn.initBT(req, $pay_btn);\r\n            },\r\n            error: function() {\r\n            }\r\n        });\r\n    };\r\n\r\n    BTFn.initBT = function(req, $pay_btn) {\r\n\r\n        braintree.setup(\r\n            req,\r\n            ''dropin'', {\r\n                container: ''dropin'',\r\n                onReady:function(){\r\n                    $(''.loader_container'').remove();\r\n                },\r\n                onError: function(error) {\r\n                    $pay_btn.show().closest(''.btn_container'').find(''.loader_img'').hide();\r\n                }\r\n        });\r\n    };\r\n\r\n    BTFn.formValidate = function($form, $submit, $amount, $pay_btn) {\r\n\r\n        var THIS = this;\r\n\r\n        $submit.on(''click'', function(e) {\r\n\r\n            $(''.input-label .invalid-bottom-bar'').removeClass(''invalid'');\r\n            $(this).hide().closest(''.btn_container'').find(''.loader_img'').css(''display'', ''inline-block'');\r\n        });\r\n    };\r\n\r\n    BTFn.updateForm = function($form, link) {\r\n        \r\n        $form.attr(''action'', link);\r\n        $(''.one_off_amount, .monthly_amount'').toggleClass(''hide'');\r\n    };\r\n\r\n    BTFn.appendTo = function($cont, childSelector, options) {\r\n\r\n        var input = document.createElement(childSelector);\r\n        input.type = options.type;\r\n        input.name = options.name;\r\n        input.value = options.value;\r\n        $cont.appendChild(input);\r\n    };\r\n\r\n    $(document).ready(function() {\r\n\r\n        $(''.loader_container'').find("div").show();\r\n\r\n		var $form = $(''#checkout''), $submit = $(''#checkout input[type="submit"]''), $amount = $(''input[name="amount"]''), $pay_btn = $(''.pay-btn'');\r\n\r\n        BTFn.sendJSON($pay_btn);\r\n        BTFn.formValidate($form, $submit, $amount, $pay_btn);\r\n    });\r\n})();\r\n\r\n&lt;/script&gt;<br></pre><p><br></p><p><br></p><p><br></p><p><br></p>', '2019-01-15 16:02:03', 0),
(15, 'Get started with Amazon Web Service (AWS) EC2', 6, '<p><span style="font-family: verdana, geneva, sans-serif;"><strong style="color: #003163;">Launch EC2</strong></span></p>\r\n<ol>\r\n<li><span style="font-family: verdana, geneva, sans-serif;"><strong>Choose an Amazon Machine Image (AMI)</strong> </span><br /><span style="font-family: verdana, geneva, sans-serif;">Here I will launch AWS EC2 instance with Ubuntu Server</span></li>\r\n<li><span style="font-family: verdana, geneva, sans-serif;"><strong>Choose an Instance Type</strong></span></li>\r\n<li><span style="font-family: verdana, geneva, sans-serif;"><strong>Setting Security Group <br /></strong>In the Inbound Tap, add an </span>accessible<span style="font-family: verdana, geneva, sans-serif;"> port for HTTP (80), SSH (22), MySQL (3306)</span></li>\r\n<li><span style="font-family: verdana, geneva, sans-serif;"><strong>Create Key Pair</strong> Necessary for </span>ssh<span style="font-family: verdana, geneva, sans-serif;"> connect</span></li>\r\n</ol>\r\n<p><span style="font-family: verdana, geneva, sans-serif;">(Reference) <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/LaunchingAndUsingInstances.html" target="_blank" rel="noopener">http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/LaunchingAndUsingInstances.html</a></span></p>\r\n<p>&nbsp;</p>\r\n<p><span style="font-family: verdana, geneva, sans-serif;"><strong style="color: #003163;">Install SSH Clients and connect AWS</strong></span></p>\r\n<p><span style="color: #333333; font-family: verdana, geneva, sans-serif;">I would install XSHELL alternative of PuTTY which is the most popular SSH clients for Windows-based systems. The reason I prefer XSHELL rather than PuTTY is that when handling multiple servers, XSHELL has some convenient functions which PuTTY does not have such as session copy connect, tapping between multiple instances.</span></p>\r\n<ol>\r\n<li><span style="color: #333333; font-family: verdana, geneva, sans-serif;">&nbsp;In the XSHELL terminal, <span style="background-color: #efefef;">file&gt;new&gt;connection</span>, input Host (EC2 public DN or public IP) and Port(22).</span></li>\r\n<li><span style="font-family: verdana, geneva, sans-serif;">&nbsp;In <span style="color: #003163; background-color: #efefef;">connection&gt;Authentication</span><span style="color: #333333;">, choose public Key as </span><span style="color: #333333;">a method</span><span style="color: #333333;"> and </span><span style="color: #003163; background-color: #efefef;">user key&gt;browser&gt;import</span><span style="color: #333333;"> and c</span><span style="color: #333333;">hoose the key file(.pem)</span></span></li>\r\n</ol>\r\n<p><span style="font-family: verdana, geneva, sans-serif;"><span style="color: #333333;">(Reference) </span><a style="background-color: #ffffff;" href="http://stevenjsmin.tistory.com/126" target="_blank" rel="noopener">http://stevenjsmin.tistory.com/126</a></span></p>\r\n<p><span style="color: #333333; font-family: verdana, geneva, sans-serif;"><strong>&nbsp;</strong></span></p>\r\n<p><span style="font-family: verdana, geneva, sans-serif;"><strong style="color: #003163;">Install&nbsp; LAMP on Ubuntu</strong></span></p>\r\n<p><span style="font-family: verdana, geneva, sans-serif;"><span style="color: #404040; font-family: Lora,;">A</span> "LAMP" stack is a group of open source software that is typically installed together to enable a server to host dynamic websites and web apps. This term is actually an acronym which represents the&nbsp;Linux operating system, with the&nbsp;Apache web server. The site data is stored in a&nbsp;MySQL database, and dynamic content is processed by&nbsp;PHP.&nbsp;</span></p>\r\n<ol>\r\n<li><span style="font-family: verdana, geneva, sans-serif;">&nbsp;Install Apache and Allow in Firewall<br /><code>$sudo apt-get update<br /></code>$sudo apt-get install apache2<br /></span></li>\r\n<li><span style="font-family: verdana, geneva, sans-serif;">Adjust the Firewall to Allow Web Traffic.<br />Make sure that the firewall allows HTTP and HTTPS traffic. You can make sure that UFW has an application profile for Apache like so;&nbsp;<br /><code>$ sudo ufw app list<br /></code>If you look at the Apache Full profile, it should show that it enables traffic to ports 80 and 443.&nbsp;<br /><code>$ sudo ufw a pp info "Apache Full"</code><br /></span></li>\r\n<li><span style="font-family: verdana, geneva, sans-serif;">Install My SQL&nbsp;<br /><code>$ sudo apt-get install mysql-server</code><br /></span></li>\r\n<li><span style="font-family: verdana, geneva, sans-serif;">Install PHP<br /><code>$ sudo apt-get install php libapache2-mod-php php-mcrypt php-mysql</code><br /></span></li>\r\n<li><span style="font-family: verdana, geneva, sans-serif;">Make Apache look for an&nbsp;index.php&nbsp;file first.<br /><code>$ sudo nano /etc/apache2/mods-enabled/dir.conf&nbsp;&nbsp;&nbsp;&nbsp;<br /></code>Move the PHP index file to the first position after the&nbsp;DirectorIndex<br /></span></li>\r\n<li><span style="font-family: verdana, geneva, sans-serif;">Test PHP Processing on your Web Server</span></li>\r\n</ol>\r\n<p><span style="font-family: verdana, geneva, sans-serif;">(Reference) </span><span style="font-family: verdana, geneva, sans-serif;">https://www.digitalocean.com/community/tutorials/how-to-install-and-secure-phpmyadmin-on-ubuntu-12-04,http://trend21c.tistory.com/1297</span></p>\r\n<p>&nbsp;</p>\r\n<p><span style="font-family: verdana, geneva, sans-serif;"><strong>Install phpMyAdmin on Ubuntu</strong></span></p>\r\n<ol>\r\n<li><span style="font-family: verdana, geneva, sans-serif;">The easiest way to install </span>phpmyadmin<span style="font-family: verdana, geneva, sans-serif;"> is through apt-get:<br /><code>$ sudo apt-get install </code>phpmyadmin<code> apache2-utils</code><br /></span></li>\r\n<li>Add phpmyadmin<span style="font-family: verdana, geneva, sans-serif;"> to the </span>apache<span style="font-family: verdana, geneva, sans-serif;"> configuration:<br /></span><code><span style="font-family: verdana, geneva, sans-serif;">$ sudo nano /etc/apache2/apache2.conf<br /></span></code>Add the phpmyadmin<span style="font-family: verdana, geneva, sans-serif;"> config to the file.&nbsp;<span style="background-color: #f5f5f5; color: #333333; font-family: Menlo, Monaco, Consolas,;">include /etc/phpmyadmin/apache.conf<br /></span></span>Restart Apache:<br /><code>$ sudo service apache2 restart</code></li>\r\n<li><code></code>Accessing phpMyAdmin :(<span style="background-color: #f5f5f5; color: #333333; font-family: Menlo, Monaco, Consolas,;">youripaddress)/phpmyadmin</span></li>\r\n</ol>\r\n<p>(<span style="font-family: verdana, geneva, sans-serif;">Reference) </span><span style="font-family: verdana, geneva, sans-serif;">https://www.digitalocean.com/community/tutorials/how-to-install-and-secure-phpmyadmin-on-ubuntu-12-04</span></p>', '2019-01-15 19:29:41', 0),
(16, 'Manage files on AWS EC2 using FileZilla / SFTP', 6, '            <p><b>Connect to Amazon EC2 file directory using FileZilla</b></p><p>1. Edit(preferences) > Settings > Connection > SFTP, Click "Add key File"</p><p>2. Browse to the location of your .pem file and select it.</p><p>3. File>Site Manager, Add a new site with the following parameters;</p><p>Â  Â  <font color="#333333"><b>Host: </b>Your public dns name of EC2 instance</font></p><p>Â  Â  <b>Protocol: </b>SFTP</p><p>Â  Â  <font color="#333333"><b>Logon Type: </b>Normal</font></p><p>Â  Â  <b>User:</b>Â ec2-user (for Amazon Linux), ubuntu (for Ubuntu)</p><p><font color="#333333">Reference:</font></p><p>http://stackoverflow.com/questions/16744863/connect-to-amazon-ec2-file-directory-using-filezilla-and-sftp<font color="#333333"><br></font></p><p><font color="#333333"><br></font></p><p><font color="#333333"><b>Connect Atom (Code Editor) to Amazon EC2</b></font></p><p><font color="#333333">Using SFTP and FTP features inside Atom enables to upload and download files directly from/to inside Atom to/from the server</font></p><p><font color="#333333">1. Install Remot-FTP: File > Preference(windows) > install tab, search for <span style="background-color: rgb(255, 255, 0);">remote-sync </span>and install it.</font></p><p><font color="#333333">2. Configure remote sync: right click main project folder. Navigate to Remote Sync>Configure. Fill in the details and select options.</font></p><p><font color="#333333">Reference:</font></p><p>https://atom.io/packages/remote-sync<font color="#333333"><br></font></p><p><font color="#333333"><br></font><br></p>         ', '2019-01-15 19:41:32', 0),
(17, 'Amazon EC2 and Elastic Beanstalk', 6, '            <p>AWS encompasses the range of Web Services that includes EC2 and Elastic Beanstalk. It also includes many others such as S3, RDS, DynamoDB, and all the others.</p><p><font color="#333333"><b>EC2</b></font></p><p><font color="#333333">EC2 is Amazon''s service that allows you to create a server (AWS calls these <span style="background-color: rgb(239, 239, 239);">instances</span>) in the AWS cloud. You can do whatever you want with this instance as well as launch<span style="background-color: rgb(247, 247, 247);"> </span><span style="background-color: rgb(239, 239, 239);">n</span> number of instances.</font></p><p><font color="#333333"><br></font></p><p><font color="#333333"><b>Elastic Beanstalk</b></font></p><p><font color="#333333">Elastic Beanstalk is one layer of abstraction away from the EC2 layer. Elastic Beanstalk will setup an "environment" for you that can contain a number of EC2 instances, an optional database, as well as a few other AWS components such as Elastic Load Balancer, Auto-Scaling Group, Security Group. Then Elastic Beanstalk will manage these items for you whenever you want to update your software running in AWS. Elastic Beanstalk doesn''t add any cost on top of these resources that it creates for you. If you have 10 hours of EC2 usage, then all you pay is 10 compute hours.</font></p><p><font color="#333333"><br></font></p><p><font color="#333333"><b>What to pick?</b></font></p><p><font color="#333333">In the case that you want to reduce system operations and just focus on the website, then Elastic Beanstalk would be the best choice for that. Elastic Beanstalk supports a PHP stack (as well as others). You can keep your site in version control and easily deploy to your environment whenever you make changes. It will also setup an Autoscaling group which can spawn up more EC2 instances if traffic is growing.</font></p><p><font color="#333333"><br></font></p>         ', '2019-01-15 19:49:22', 0);

-- --------------------------------------------------------

--
-- Table structure for table `tags`
--

CREATE TABLE `tags` (
  `id` int(11) NOT NULL,
  `name` varchar(256) NOT NULL,
  `color` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `tags`
--

INSERT INTO `tags` (`id`, `name`, `color`) VALUES
(1, 'php 3', 1),
(2, 'HTML/CSS/JS', 2),
(4, 'Laravel', 3),
(5, 'MEAN stack', 4),
(6, 'AWS', 5);

--
-- Indexes for dumped tables
--

--
-- Indexes for table `comments`
--
ALTER TABLE `comments`
  ADD PRIMARY KEY (`cid`);

--
-- Indexes for table `posts`
--
ALTER TABLE `posts`
  ADD PRIMARY KEY (`pid`);

--
-- Indexes for table `tags`
--
ALTER TABLE `tags`
  ADD PRIMARY KEY (`id`);

--
-- AUTO_INCREMENT for dumped tables
--

--
-- AUTO_INCREMENT for table `comments`
--
ALTER TABLE `comments`
  MODIFY `cid` int(11) NOT NULL AUTO_INCREMENT;
--
-- AUTO_INCREMENT for table `posts`
--
ALTER TABLE `posts`
  MODIFY `pid` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=18;
--
-- AUTO_INCREMENT for table `tags`
--
ALTER TABLE `tags`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=7;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
